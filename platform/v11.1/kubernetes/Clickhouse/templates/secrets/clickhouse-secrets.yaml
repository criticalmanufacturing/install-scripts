kind: Secret
apiVersion: v1
{{- $secretName := "clickhouse-secrets" }}
metadata:
  name: {{ $secretName }}
data:
  {{- if not .Values.clickhouse.tls.autoGenerated }}
  root.crt: {{ required "A valid .Values.clickhouse.tls.caCertificate entry required!" .Values.clickhouse.tls.caCertificate | b64enc | quote }}
  server.crt: {{ required "A valid .Values.clickhouse.tls.serverCertificate entry required!" .Values.clickhouse.tls.serverCertificate | b64enc | quote }}
  server.key: {{ required "A valid .Values.clickhouse.tls.serverKey entry required!" .Values.clickhouse.tls.serverKey | b64enc | quote }}
  {{- else }}
  {{- $ca := genCA "clickhouse-internal-ca" 365 }}
  {{- $fullname := include "clickhouse.fullname" . }}
  {{- $releaseNamespace := .Release.Namespace }}
  {{- $clusterDomain := .Values.clusterDomain }}
  {{- $serviceName := include "clickhouse.fullname" . }}
  {{- $altNames := list (printf "*.%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) $fullname }}
  {{- $cert := genSignedCert $fullname nil $altNames 365 $ca }}
  server.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "server.crt" "defaultValue" $cert.Cert "context" $) }}
  server.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "server.key" "defaultValue" $cert.Key "context" $) }}
  root.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "root.crt" "defaultValue" $ca.Cert "context" $) }}
  {{- end }}
type: Opaque