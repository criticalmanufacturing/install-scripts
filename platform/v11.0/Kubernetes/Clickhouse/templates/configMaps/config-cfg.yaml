apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.clickhouseConfig.name }}
  labels:
    {{- include "clickhouse.labels" . | nindent 4 }}
data:
  config: |
    <?xml version="1.0"?>
    <clickhouse>
        <openSSL>
            <server>
                <loadDefaultCAFile>false</loadDefaultCAFile>
                <caConfig>/tmp/ClickHouseData/Certificates/Generic/root.crt</caConfig>
                <privateKeyFile>/tmp/ClickHouseData/Certificates/Generic/server.key</privateKeyFile>
                <certificateFile>/tmp/ClickHouseData/Certificates/Generic/server.crt</certificateFile>
                {{- if .Values.clickhouseConfig.openSSL.validateCertificates }}
                <verificationMode>strict</verificationMode>
                {{- else }}
                <verificationMode>none</verificationMode>
                {{- end }}
                <cacheSessions>true</cacheSessions>
                <disableProtocols>sslv2,sslv3</disableProtocols>
                <preferServerCiphers>true</preferServerCiphers>
            </server>
            <client>
                <loadDefaultCAFile>false</loadDefaultCAFile>
                <caConfig>/tmp/ClickHouseData/Certificates/Generic/root.crt</caConfig>
                <cacheSessions>true</cacheSessions>
                <disableProtocols>sslv2,sslv3</disableProtocols>
                <preferServerCiphers>true</preferServerCiphers>
                {{- if .Values.clickhouseConfig.openSSL.validateCertificates }}
                <verificationMode>strict</verificationMode>
                {{- else }}
                <verificationMode>none</verificationMode>
                {{- end }}
                <invalidCertificateHandler>
                    <name>{{ .Values.clickhouseConfig.openSSL.invalidCertificateHandler }}</name>
                </invalidCertificateHandler>
            </client>
        </openSSL>
        {{- if .Values.kafka.useClientCredentials }}
        <kafka>
            <security_protocol>SSL</security_protocol>
            {{- if .Values.kafka.clientCredentials.useCA }}
            <ssl_ca_location>{{ .Values.kafka.clientCredentials.credentialsLocation }}root.crt</ssl_ca_location>
            {{- end }}
            <ssl_certificate_location>{{ .Values.kafka.clientCredentials.credentialsLocation }}client.crt</ssl_certificate_location>
            <ssl_key_location>{{ .Values.kafka.clientCredentials.credentialsLocation }}client.key</ssl_key_location>
            {{- if .Values.kafka.validateCertificates }}
            <ssl_endpoint_identification_algorithm>https</ssl_endpoint_identification_algorithm>
            <enable_ssl_certificate_verification>true</enable_ssl_certificate_verification>
            {{- else }}
            <ssl_endpoint_identification_algorithm>none</ssl_endpoint_identification_algorithm>
            <enable_ssl_certificate_verification>false</enable_ssl_certificate_verification>
            {{- end }}
        </kafka>
        {{- else }}
        <kafka>
            <security_protocol>SASL_SSL</security_protocol>
            <sasl_mechanism>PLAIN</sasl_mechanism>
            <sasl_username>{{ .Values.kafka.sasl.username }}</sasl_username>
            <sasl_password>{{ .Values.kafka.sasl.password }}</sasl_password>
            {{- if .Values.kafka.validateCertificates }}
            <ssl_endpoint_identification_algorithm>https</ssl_endpoint_identification_algorithm>
            <enable_ssl_certificate_verification>true</enable_ssl_certificate_verification>
            {{- else }}
            <ssl_endpoint_identification_algorithm>none</ssl_endpoint_identification_algorithm>
            <enable_ssl_certificate_verification>false</enable_ssl_certificate_verification>
            {{- end }}
        </kafka>
        {{- end }}
        <http_port>8123</http_port>
        <https_port>{{ .Values.service.https.port }}</https_port>
        <tcp_port>9000</tcp_port>
        <tcp_port_secure>{{ .Values.service.nativetls.port }}</tcp_port_secure>
        <logger>
            <level>Warning</level>
            <console>1</console>
        </logger>
    </clickhouse>