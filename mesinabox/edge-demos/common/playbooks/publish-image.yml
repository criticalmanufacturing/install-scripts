---

    - shell: composer-cli compose status | grep {{ image_version }} | awk '{print $1}'
      register: image_export_id

    - name: Export the compose artifact
      become: true
      infra.osbuild.export_compose:
        compose_id: "{{ image_export_id.stdout }}"
        dest: "/tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ image_version }}.tar"

    - name: Untar artifact
      become: true
      ansible.builtin.unarchive:
        src: /tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ image_version }}.tar
        dest: /tmp/{{ builder_blueprint_name }}
        remote_src: true


########################################################################################################
# 
## AT THIS MOMENT THE OSTREE REPOSITORY CANNOT BE UPGRADED IN THE WAY THAT THE COLLECTION IS DOING IT
## BECAUSE THERE IS A BUG IN RPM-OSTREE THAT DOES NOT ALLOW TO RUN COMMANDS SUCH AS rpm-ostree upgrade --check
## OR rpm-ostree upgrade --preview THIS IS THE ERROR THAT YOU WILL GET:
#
# error: Bus owner changed, aborting. This likely means the daemon crashed; check logs with `journalctl -xe`
#
# https://github.com/coreos/rpm-ostree/issues/4280
#
####################################################


#    - shell: ostree refs --repo=/tmp/{{ builder_blueprint_name }}/repo
#      register: builder_blueprint_ref

#    - name: Get checksum from artifact
#      become: true
#      ansible.builtin.command:
#        cmd: "/usr/bin/ostree --repo=/tmp/{{ builder_blueprint_name }}/repo rev-parse {{ builder_blueprint_ref.stdout  }}"
#      register: checksum_output
#      changed_when: false

#    - name: Pull commit from artifact
#      become: true
#      ansible.builtin.command:
#        cmd: "/usr/bin/ostree --repo=/var/www/html/{{ builder_blueprint_name }}/repo pull-local /tmp/{{ builder_blueprint_name }}/repo {{ checksum_output['stdout'] }}"
#      changed_when: true

#    - name: Commit changes to repository
#      become: true
#      ansible.builtin.command:
#        cmd: "/usr/bin/ostree --repo=/var/www/html/{{ builder_blueprint_name }}/repo commit -b {{ builder_blueprint_ref.stdout  }} -s 'Release {{ image_version }}' --add-metadata-string=version={{ image_version }} --tree=ref={{ checksum_output['stdout'] }}"
#      changed_when: true



## IN ORDER TO WORKAROUND WHILE THAT'S FIXED WE CAN JUST COPY THE NEW FILES IN THE HTTP SERVER

    - name: Remove old repo directory
      become: true
      ansible.builtin.file:
        path: /var/www/html/{{ builder_blueprint_name }}/repo
        state: absent

    - name: Copy the new repo
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: /tmp/{{ builder_blueprint_name }}/repo
        dest: /var/www/html/{{ builder_blueprint_name }}



########################################################################################################


    - name: Remove tar file
      become: true
      ansible.builtin.file:
        path: "/tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ image_version }}.tar"
        state: absent

    - name: Restore context on blueprint directory
      become: true
      ansible.builtin.command: "restorecon -R /var/www/html/{{ builder_blueprint_name }}"
      changed_when: true