#!/bin/bash

set -x

      echo ""
      echo ""
      echo "Creating ISO image with kickstart embedded..."
      echo ""

      mkdir -p mnt/rhel-iso/
      mkdir tmp

      mount -o loop $(echo {{ system.cdn_rhel_iso }} | awk -F "iso/" '{print $2}') mnt/rhel-iso/


      shopt -s dotglob
      mkdir -p tmp/rhel-iso
      cp -avRf mnt/rhel-iso/* tmp/rhel-iso


      # Kickstart could be imported into the image and be used instead downloading from the HTTP server... but modifiying the kickstart in the HTTP server is easier...
      #cp ${kickstart_file} tmp/rhel-iso/ks.cfg




      iso_label=$(blkid $(echo {{ system.cdn_rhel_iso }} | awk -F "iso/" '{print $2}')| awk -F 'LABEL="' '{print $2}' | cut -d '"' -f 1)
      #iso_label=$(grep RHEL isolinux/isolinux.cfg | head -n 1 | awk '{print $3}' | cut -d "=" -f 3)

      cd tmp/rhel-iso




      if [ $(arch) = aarch64 ]
      then

         sed -i 's/timeout=60/timeout=1/g' EFI/BOOT/grub.cfg

         #sed -i "s/quiet/inst.ks=hd:LABEL=${iso_label}:\/ks.cfg/g" EFI/BOOT/grub.cfg
         sed -i "s/inst.stage2/inst.ks=http:\/\/{{ ansible_host }}\/{{ builder_blueprint_name }}\/kickstart.ks inst.stage2/g" EFI/BOOT/grub.cfg
         sed -i "s/RHEL-.-.-0-BaseOS-$(arch)/${iso_label}/g" EFI/BOOT/grub.cfg



         rm -rf /tmp/rhel-custom-kernelarg.iso


         xorriso -as mkisofs -V ${iso_label} -r -o /tmp/rhel-custom-kernelarg.iso -J -joliet-long -cache-inodes -efi-boot-part --efi-boot-image -e images/efiboot.img -no-emul-boot .



         implantisomd5 /tmp/rhel-custom-kernelarg.iso



      else
         #sed -i "s/quiet/inst.ks=hd:LABEL=${iso_label}:\/ks.cfg/g" isolinux/isolinux.cfg
         sed -i "s/quiet/inst.ks=http:\/\/{{ ansible_host }}\/{{ builder_blueprint_name }}\/kickstart.ks/g" isolinux/isolinux.cfg
         sed -i 's/timeout 600/timeout 1/g' isolinux/isolinux.cfg
         sed -i "s/RHEL-.-.-0-BaseOS-$(arch)/${iso_label}/g" isolinux/isolinux.cfg


         sed -i 's/timeout 60/timeout 1/g' isolinux/grub.conf
         sed -i 's/timeout=60/timeout=1/g' EFI/BOOT/BOOT.conf
         sed -i 's/timeout=60/timeout=1/g' EFI/BOOT/grub.cfg

         #sed -i "s/quiet/inst.ks=hd:LABEL=${iso_label}:\/ks.cfg/g" EFI/BOOT/grub.cfg
         sed -i "s/quiet/inst.ks=http:\/\/{{ ansible_host }}\/{{ builder_blueprint_name }}\/kickstart.ks/g" EFI/BOOT/grub.cfg
         sed -i "s/RHEL-.-.-0-BaseOS-$(arch)/${iso_label}/g" EFI/BOOT/grub.cfg



         rm -rf /tmp/rhel-custom-kernelarg.iso




         ## LEGACY boot
         #mkisofs -o ../../images/${image_commit}-custom-kernelarg.iso -b isolinux/isolinux.bin -c isolinux/boot.cat --joliet-long --no-emul-boot --boot-load-size 4 --boot-info-table -J -R -V  "${iso_label}" .
         #isohybrid ../../images/${image_commit}-custom-kernelarg.iso


         # UEFI boot
         mkisofs -o /tmp/rhel-custom-kernelarg.iso -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e images/efiboot.img -no-emul-boot -graft-points -J -R -l  -V "${iso_label}" .
         isohybrid --uefi  /tmp/rhel-custom-kernelarg.iso


         implantisomd5 /tmp/rhel-custom-kernelarg.iso

      fi



      cd ../../


      umount mnt/rhel-iso
      rm -rf mnt
      rm -rf tmp



